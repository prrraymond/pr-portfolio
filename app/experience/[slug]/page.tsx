import { notFound } from "next/navigation"
import Image from "next/image"
import { Badge } from "@/components/ui/badge"
import { ChevronLeft, ExternalLink } from "lucide-react"
import Link from "next/link"
import { getContentById } from "@/lib/airtable"
import { getEraStyles } from "@/lib/era-styles"

export const dynamicParams = true // Allow dynamic params that aren't generated by generateStaticParams

export default async function ExperiencePage({ params }: { params: { slug: string } }) {
  // Find the experience item by slug
  const experience = await getContentById(params.slug)

  if (!experience) {
    notFound()
  }

  // Get era-specific styles
  const eraStyles = getEraStyles(experience.era)

  return (
    <div className={`min-h-screen ${eraStyles.container}`}>
      {/* Back button */}
      <div className="absolute top-4 left-4 z-30">
        <Link href="/" className={`flex items-center ${eraStyles.body} hover:text-blue-600 transition-colors`}>
          <ChevronLeft className="h-5 w-5 mr-1" />
          Back
        </Link>
      </div>

      {/* Hero Section */}
      <div className="relative h-[70vh] w-full">
        {/* Hero Image */}
        <div className="absolute inset-0">
          <Image
            src={
              experience.image ||
              `/placeholder.svg?height=1080&width=1920&query=${encodeURIComponent(experience.title) || "/placeholder.svg"}`
            }
            alt={experience.title}
            fill
            className={`object-cover ${eraStyles.filter}`}
            priority
          />
          <div className="absolute inset-0 bg-gradient-to-t from-white via-white/60 to-transparent" />
        </div>

        {/* Content */}
        <div className="absolute bottom-0 left-0 w-full p-6 md:p-12 z-10">
          <div className="max-w-4xl">
            <div className="mb-2 flex items-center">
              <Badge variant="outline" className={`text-xs ${eraStyles.badge} mr-2`}>
                {experience.type.toUpperCase()}
              </Badge>
              <span className={`text-sm text-gray-500`}>{experience.startYear}</span>
            </div>

            <h1 className={`text-4xl md:text-6xl font-bold mb-4 ${eraStyles.header}`}>{experience.title}</h1>

            {experience.company && (
              <div className="flex items-center space-x-4 mb-6">
                {experience.logo && (
                  <div className="h-8 w-8 relative mr-2">
                    <Image
                      src={experience.logo || "/placeholder.svg"}
                      alt={experience.company}
                      fill
                      className="object-contain"
                    />
                  </div>
                )}
                <span className="text-lg font-medium">{experience.company}</span>
              </div>
            )}

            <p className={`text-lg max-w-3xl ${eraStyles.body}`}>{experience.description}</p>
          </div>
        </div>
      </div>

      {/* Navigation Tabs (visual only - we're using vertical scrolling) */}
      <div className="border-b border-gray-200">
        <div className="flex px-6 md:px-12">
          <div className={`py-4 px-2 border-b-2 border-blue-500 font-medium ${eraStyles.header}`}>Overview</div>
          <div className="py-4 px-2 text-gray-400">Details</div>
          <div className="py-4 px-2 text-gray-400">Gallery</div>
          <div className="py-4 px-2 text-gray-400">Related</div>
        </div>
      </div>

      {/* Overview Section */}
      <section className="py-12 px-6 md:px-12">
        <div className="max-w-4xl mx-auto">
          <h2 className={`text-2xl font-bold mb-6 ${eraStyles.header}`}>Overview</h2>

          <div className={`prose prose-lg max-w-none mb-12 ${eraStyles.body}`}>
            {experience.content ? (
              <div dangerouslySetInnerHTML={{ __html: experience.content }} />
            ) : (
              <p>
                This is an extended description of the {experience.title} experience at {experience.company}.
              </p>
            )}
          </div>

          {/* Skills Section */}
          {experience.skills && experience.skills.length > 0 && (
            <div className="mb-12">
              <h3 className={`text-xl font-semibold mb-4 ${eraStyles.header}`}>Skills</h3>
              <div className="flex flex-wrap gap-2">
                {experience.skills.map((skill) => (
                  <Badge key={skill} variant="secondary" className={eraStyles.badge}>
                    {skill}
                  </Badge>
                ))}
              </div>
            </div>
          )}

          {/* Tools Section */}
          {experience.tools && experience.tools.length > 0 && (
            <div className="mb-12">
              <h3 className={`text-xl font-semibold mb-4 ${eraStyles.header}`}>Tools</h3>
              <div className="flex flex-wrap gap-6">
                {experience.tools.map((tool) => (
                  <div key={tool.name} className="flex flex-col items-center">
                    <div className="w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center mb-2 p-2 border-l-4 border-blue-500">
                      <Image
                        src={tool.logo || `/placeholder.svg?height=48&width=48&query=${encodeURIComponent(tool.name)}`}
                        alt={tool.name}
                        width={48}
                        height={48}
                        className="object-contain"
                      />
                    </div>
                    <span className="text-sm text-gray-600">{tool.name}</span>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* External Link */}
          {experience.link && (
            <div className="mb-12">
              <a
                href={experience.link}
                target="_blank"
                rel="noopener noreferrer"
                className={`inline-flex items-center px-4 py-2 rounded ${eraStyles.button}`}
              >
                <ExternalLink className="h-4 w-4 mr-2" />
                View Project
              </a>
            </div>
          )}
        </div>
      </section>

      {/* Project Images Section */}
      {experience.projectImages && experience.projectImages.length > 0 && (
        <section className="py-12 px-6 md:px-12 bg-gray-50">
          <div className="max-w-4xl mx-auto">
            <h2 className={`text-2xl font-bold mb-6 ${eraStyles.header}`}>Gallery</h2>

            <div className="space-y-12">
              {experience.projectImages.map((image, index) => (
                <div key={index} className="space-y-2">
                  <div className="relative aspect-video w-full overflow-hidden rounded-lg shadow-md border-l-4 border-blue-500">
                    <Image
                      src={image.url || "/placeholder.svg"}
                      alt={image.caption || `Project image ${index + 1}`}
                      fill
                      className={`object-cover ${eraStyles.filter}`}
                    />
                  </div>
                  {image.caption && <p className="text-sm text-gray-600 italic text-center">{image.caption}</p>}
                </div>
              ))}
            </div>
          </div>
        </section>
      )}
    </div>
  )
}
